# Auto-generated using compose2nix v0.3.1. Edited.
{ pkgs, lib, config, ... }@args:
let inherit (args) inputs;
in {
  # Create persistent directory for postgres data
  systemd.tmpfiles.rules = [
    "d /srv/plex/config 0750 docker docker -"
    "d /srv/plex/transcode 0750 docker docker -"
  ];

  # Runtime
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."plex-server" = {
    image = "linuxserver/plex";
    environment = {
      "PUID" = "990";
      "PGID" = "131";
      "TZ" = "Europe/Berlin";
    };
    volumes = [
      "/data/movies:/data/movies:rw"
      "/data/music:/data/music:rw"
      "/srv/plex/config:/config:rw"
      "/srv/plex/transcode:/transcode:rw"
    ];
    log-driver = "journald";
    extraOptions = [ "--device=/dev/dri:/dev/dri:rwm" "--network=host" ];
  };
  systemd.services."docker-plex-server" = {
    serviceConfig = { Restart = lib.mkOverride 90 "no"; };
    partOf = [ "docker-compose-plex-server-root.target" ];
    wantedBy = [ "docker-compose-plex-server-root.target" ];
  };

  networking.firewall.allowedTCPPorts = [ 32400 ];

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-plex-server-root" = {
    unitConfig = { Description = "Root target generated by compose2nix."; };
    wantedBy = [ "multi-user.target" ];
  };
}
