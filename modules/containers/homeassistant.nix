# ██╗  ██╗ ██████╗ ███╗   ███╗███████╗     █████╗ ███████╗███████╗██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗
# ██║  ██║██╔═══██╗████╗ ████║██╔════╝    ██╔══██╗██╔════╝██╔════╝██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝
# ███████║██║   ██║██╔████╔██║█████╗      ███████║███████╗███████╗██║███████╗   ██║   ███████║██╔██╗ ██║   ██║
# ██╔══██║██║   ██║██║╚██╔╝██║██╔══╝      ██╔══██║╚════██║╚════██║██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║
# ██║  ██║╚██████╔╝██║ ╚═╝ ██║███████╗    ██║  ██║███████║███████║██║███████║   ██║   ██║  ██║██║ ╚████║   ██║
# ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝    ╚═╝  ╚═╝╚══════╝╚══════╝╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝
# ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
# This module was auto-generated using compose2nix v0.3.1 and then edited
#  by hand. Home assistant is a home automation tool. For a reference on the
#  options look at: https://www.home-assistant.io/installation/linux#docker-compose

{ pkgs, lib, ... }:
{

  imports = [ ../../users/docker.nix ];

  # Create persistent directory for the container data
  systemd.tmpfiles.rules = [ "d /srv/homeassistant/config 0750 docker docker -" ];

  # Containers
  virtualisation.oci-containers.containers."homeassistant" = {
    image = "ghcr.io/home-assistant/home-assistant:stable";
    volumes = [
      "/srv/homeassistant/config:/config:rw"
      "/etc/localtime:/etc/localtime:ro"
      "/run/dbus:/run/dbus:ro"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network=host"
      "--privileged"
    ];
  };
  systemd.services."docker-homeassistant" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    partOf = [ "docker-compose-homeassistant-root.target" ];
    wantedBy = [ "docker-compose-homeassistant-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-homeassistant-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
